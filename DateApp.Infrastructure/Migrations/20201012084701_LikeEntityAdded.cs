using System;
using Microsoft.EntityFrameworkCore.Migrations;

namespace DateApp.Infrastructure.Migrations
{
    public partial class LikeEntityAdded : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "Values");

            migrationBuilder.CreateTable(
                name: "Likes",
                columns: table => new
                {
                    SourceUserId = table.Column<int>(type: "INTEGER", nullable: false),
                    LikedUserId = table.Column<int>(type: "INTEGER", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Likes", x => new { x.SourceUserId, x.LikedUserId });
                    table.ForeignKey(
                        name: "FK_Likes_Users_LikedUserId",
                        column: x => x.LikedUserId,
                        principalTable: "Users",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_Likes_Users_SourceUserId",
                        column: x => x.SourceUserId,
                        principalTable: "Users",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 12,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 241, 244, 79, 51, 183, 6, 46, 160, 99, 206, 166, 109, 184, 163, 146, 196, 217, 9, 65, 195, 85, 172, 21, 154, 13, 247, 86, 178, 177, 5, 153, 41, 150, 69, 124, 254, 143, 122, 187, 11, 178, 80, 151, 136, 35, 110, 232, 43, 27, 94, 161, 131, 223, 93, 115, 196, 183, 124, 110, 50, 95, 111, 230, 48 }, new byte[] { 94, 223, 56, 100, 161, 248, 184, 140, 175, 74, 6, 80, 199, 122, 142, 52, 24, 120, 201, 57, 208, 136, 246, 3, 150, 66, 135, 206, 243, 102, 194, 165, 157, 229, 96, 255, 10, 63, 82, 156, 2, 30, 91, 55, 94, 44, 29, 69, 201, 77, 29, 216, 65, 206, 67, 184, 156, 250, 249, 252, 220, 238, 85, 21, 79, 90, 147, 208, 19, 46, 192, 88, 183, 204, 217, 230, 48, 205, 138, 79, 39, 67, 248, 179, 151, 220, 180, 117, 89, 128, 144, 56, 53, 203, 140, 46, 75, 144, 157, 168, 24, 129, 125, 215, 104, 188, 199, 213, 112, 152, 200, 252, 217, 254, 0, 204, 76, 179, 199, 244, 104, 140, 154, 152, 209, 183, 169, 200 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 13,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 241, 244, 79, 51, 183, 6, 46, 160, 99, 206, 166, 109, 184, 163, 146, 196, 217, 9, 65, 195, 85, 172, 21, 154, 13, 247, 86, 178, 177, 5, 153, 41, 150, 69, 124, 254, 143, 122, 187, 11, 178, 80, 151, 136, 35, 110, 232, 43, 27, 94, 161, 131, 223, 93, 115, 196, 183, 124, 110, 50, 95, 111, 230, 48 }, new byte[] { 94, 223, 56, 100, 161, 248, 184, 140, 175, 74, 6, 80, 199, 122, 142, 52, 24, 120, 201, 57, 208, 136, 246, 3, 150, 66, 135, 206, 243, 102, 194, 165, 157, 229, 96, 255, 10, 63, 82, 156, 2, 30, 91, 55, 94, 44, 29, 69, 201, 77, 29, 216, 65, 206, 67, 184, 156, 250, 249, 252, 220, 238, 85, 21, 79, 90, 147, 208, 19, 46, 192, 88, 183, 204, 217, 230, 48, 205, 138, 79, 39, 67, 248, 179, 151, 220, 180, 117, 89, 128, 144, 56, 53, 203, 140, 46, 75, 144, 157, 168, 24, 129, 125, 215, 104, 188, 199, 213, 112, 152, 200, 252, 217, 254, 0, 204, 76, 179, 199, 244, 104, 140, 154, 152, 209, 183, 169, 200 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 14,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 241, 244, 79, 51, 183, 6, 46, 160, 99, 206, 166, 109, 184, 163, 146, 196, 217, 9, 65, 195, 85, 172, 21, 154, 13, 247, 86, 178, 177, 5, 153, 41, 150, 69, 124, 254, 143, 122, 187, 11, 178, 80, 151, 136, 35, 110, 232, 43, 27, 94, 161, 131, 223, 93, 115, 196, 183, 124, 110, 50, 95, 111, 230, 48 }, new byte[] { 94, 223, 56, 100, 161, 248, 184, 140, 175, 74, 6, 80, 199, 122, 142, 52, 24, 120, 201, 57, 208, 136, 246, 3, 150, 66, 135, 206, 243, 102, 194, 165, 157, 229, 96, 255, 10, 63, 82, 156, 2, 30, 91, 55, 94, 44, 29, 69, 201, 77, 29, 216, 65, 206, 67, 184, 156, 250, 249, 252, 220, 238, 85, 21, 79, 90, 147, 208, 19, 46, 192, 88, 183, 204, 217, 230, 48, 205, 138, 79, 39, 67, 248, 179, 151, 220, 180, 117, 89, 128, 144, 56, 53, 203, 140, 46, 75, 144, 157, 168, 24, 129, 125, 215, 104, 188, 199, 213, 112, 152, 200, 252, 217, 254, 0, 204, 76, 179, 199, 244, 104, 140, 154, 152, 209, 183, 169, 200 } });

            migrationBuilder.CreateIndex(
                name: "IX_Likes_LikedUserId",
                table: "Likes",
                column: "LikedUserId");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "Likes");

            migrationBuilder.CreateTable(
                name: "Values",
                columns: table => new
                {
                    Id = table.Column<int>(type: "INTEGER", nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    Name = table.Column<string>(type: "TEXT", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Values", x => x.Id);
                });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 12,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 130, 225, 165, 164, 46, 18, 38, 100, 92, 240, 203, 8, 114, 232, 169, 29, 251, 97, 138, 133, 152, 199, 128, 134, 197, 0, 31, 219, 117, 21, 103, 201, 86, 54, 238, 97, 47, 42, 85, 128, 239, 14, 145, 59, 219, 75, 122, 201, 237, 14, 203, 216, 252, 180, 215, 81, 44, 18, 120, 199, 104, 56, 114, 59 }, new byte[] { 224, 230, 77, 171, 211, 39, 133, 178, 180, 123, 53, 151, 246, 251, 46, 93, 91, 213, 98, 222, 158, 220, 209, 185, 77, 45, 46, 133, 255, 176, 231, 74, 16, 16, 143, 209, 89, 161, 209, 153, 168, 127, 58, 193, 24, 101, 187, 3, 95, 94, 169, 108, 143, 10, 148, 243, 26, 111, 57, 177, 196, 123, 101, 252, 8, 138, 67, 222, 15, 135, 185, 34, 45, 183, 105, 92, 61, 139, 136, 95, 220, 157, 143, 66, 231, 52, 60, 33, 144, 31, 44, 92, 61, 10, 252, 81, 58, 188, 126, 83, 95, 18, 169, 10, 232, 71, 195, 137, 158, 171, 54, 79, 24, 200, 225, 11, 91, 1, 232, 1, 195, 177, 136, 76, 41, 59, 157, 67 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 13,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 130, 225, 165, 164, 46, 18, 38, 100, 92, 240, 203, 8, 114, 232, 169, 29, 251, 97, 138, 133, 152, 199, 128, 134, 197, 0, 31, 219, 117, 21, 103, 201, 86, 54, 238, 97, 47, 42, 85, 128, 239, 14, 145, 59, 219, 75, 122, 201, 237, 14, 203, 216, 252, 180, 215, 81, 44, 18, 120, 199, 104, 56, 114, 59 }, new byte[] { 224, 230, 77, 171, 211, 39, 133, 178, 180, 123, 53, 151, 246, 251, 46, 93, 91, 213, 98, 222, 158, 220, 209, 185, 77, 45, 46, 133, 255, 176, 231, 74, 16, 16, 143, 209, 89, 161, 209, 153, 168, 127, 58, 193, 24, 101, 187, 3, 95, 94, 169, 108, 143, 10, 148, 243, 26, 111, 57, 177, 196, 123, 101, 252, 8, 138, 67, 222, 15, 135, 185, 34, 45, 183, 105, 92, 61, 139, 136, 95, 220, 157, 143, 66, 231, 52, 60, 33, 144, 31, 44, 92, 61, 10, 252, 81, 58, 188, 126, 83, 95, 18, 169, 10, 232, 71, 195, 137, 158, 171, 54, 79, 24, 200, 225, 11, 91, 1, 232, 1, 195, 177, 136, 76, 41, 59, 157, 67 } });

            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "Id",
                keyValue: 14,
                columns: new[] { "PasswordHash", "PasswordSalt" },
                values: new object[] { new byte[] { 130, 225, 165, 164, 46, 18, 38, 100, 92, 240, 203, 8, 114, 232, 169, 29, 251, 97, 138, 133, 152, 199, 128, 134, 197, 0, 31, 219, 117, 21, 103, 201, 86, 54, 238, 97, 47, 42, 85, 128, 239, 14, 145, 59, 219, 75, 122, 201, 237, 14, 203, 216, 252, 180, 215, 81, 44, 18, 120, 199, 104, 56, 114, 59 }, new byte[] { 224, 230, 77, 171, 211, 39, 133, 178, 180, 123, 53, 151, 246, 251, 46, 93, 91, 213, 98, 222, 158, 220, 209, 185, 77, 45, 46, 133, 255, 176, 231, 74, 16, 16, 143, 209, 89, 161, 209, 153, 168, 127, 58, 193, 24, 101, 187, 3, 95, 94, 169, 108, 143, 10, 148, 243, 26, 111, 57, 177, 196, 123, 101, 252, 8, 138, 67, 222, 15, 135, 185, 34, 45, 183, 105, 92, 61, 139, 136, 95, 220, 157, 143, 66, 231, 52, 60, 33, 144, 31, 44, 92, 61, 10, 252, 81, 58, 188, 126, 83, 95, 18, 169, 10, 232, 71, 195, 137, 158, 171, 54, 79, 24, 200, 225, 11, 91, 1, 232, 1, 195, 177, 136, 76, 41, 59, 157, 67 } });
        }
    }
}
